name: ci - main reusable caller

on:
  workflow_dispatch:
    inputs:
      toolchains_only:
        description: "Only toolchain jobs"
        required: true
        default: false
        type: boolean
      docker_only:
        description: "Only docker jobs"
        required: true
        default: false
        type: boolean
      bypass_check:
        description: "Bypass check to build new release?"
        required: true
        default: false
        type: boolean
      skip_rerun:
        description: "Skip rerun?"
        required: true
        default: false
        type: boolean
      retries:
        description: "Number of rerun retries"
        required: true
        default: "3"
        type: choice
        options: ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

  # schedule:
  #   - cron: "0 */3 * * *"

  schedule:
    - cron: "*/5 * * * *"

permissions: {}

jobs:
  skip_duplicate_job:
    runs-on: ubuntu-24.04-arm
    permissions:
      actions: write
      contents: read
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: "always"
          cancel_others: "false"
          skip_after_successful_duplicate: false
          do_not_skip: ""

  scheduled_defaults:
    if: needs.skip_duplicate_job.outputs.should_skip != 'true'
    needs: [skip_duplicate_job]
    runs-on: ubuntu-24.04-arm
    outputs:
      toolchains_only: ${{ github.event.inputs.toolchains_only || 'false' }}
      docker_only: ${{ github.event.inputs.docker_only || 'false' }}
      bypass_check: ${{ github.event.inputs.bypass_check || 'false' }}
      skip_rerun: ${{ github.event.inputs.skip_rerun || 'false' }}
      retries: ${{ github.event.inputs.retries || '3' }}
    steps:
      - name: Setting Outputs from inputs
        run: |
          printf '%b\n\n' "Setting Outputs from Inputs"

  show_outputs:
    if: needs.skip_duplicate_job.outputs.should_skip != 'true'
    needs: [skip_duplicate_job, scheduled_defaults]
    runs-on: ubuntu-24.04-arm
    env:
      toolchains_only: ${{ needs.scheduled_defaults.outputs.toolchains_only }}
      docker_only: ${{ needs.scheduled_defaults.outputs.docker_only }}
      bypass_check: ${{ needs.scheduled_defaults.outputs.bypass_check }}
      skip_rerun: ${{ needs.scheduled_defaults.outputs.skip_rerun }}
      retries: ${{ needs.scheduled_defaults.outputs.retries }}
    steps:
      - name: Set output
        run: |
          printf '%b\n' "# Scheduled Defaults Outputs Summary" >> $GITHUB_STEP_SUMMARY
          printf '\n%b\n' ":octocat: Here is a summary of inputs set as string outputs that are used in workflows." >> $GITHUB_STEP_SUMMARY

          printf '\n%b\n' "toolchains_only: \`${toolchains_only}\`" >> $GITHUB_STEP_SUMMARY
          printf '\n%b\n' "docker_only: \`${docker_only}\`" >> $GITHUB_STEP_SUMMARY
          printf '\n%b\n' "bypass_check: \`${bypass_check}\`" >> $GITHUB_STEP_SUMMARY
          printf '\n%b\n' "skip_rerun: \`${skip_rerun}\`" >> $GITHUB_STEP_SUMMARY
          printf '\n%b\n' "retries: \`${retries}\`" >> $GITHUB_STEP_SUMMARY

  ci-check-new-releases:
    if: >
      needs.skip_duplicate_job.outputs.should_skip != 'true' &&
      needs.scheduled_defaults.outputs.bypass_check == 'false' &&
      needs.scheduled_defaults.outputs.docker_only == 'false' &&
      needs.scheduled_defaults.outputs.toolchains_only == 'false'
    needs: [skip_duplicate_job, scheduled_defaults]
    concurrency:
      group: ci-check-new-releases
      cancel-in-progress: true
    permissions:
      contents: write
    uses: ./.github/workflows/ci-check-new-releases.yml
    with:
      bypass_check: ${{ needs.scheduled_defaults.outputs.bypass_check }}

  bootstrap-matrix:
    if: >
      always() && !failure() && !cancelled()
      && needs.skip_duplicate_job.outputs.should_skip != 'true'
      && needs.ci-check-new-releases.outputs.build_new_release == 'true' ||
      ( needs.scheduled_defaults.outputs.docker_only == 'true' || needs.scheduled_defaults.outputs.toolchains_only == 'true' )
    needs: [skip_duplicate_job, scheduled_defaults, ci-check-new-releases]
    runs-on: ubuntu-24.04-arm
    outputs:
      mcm_build_matrix: ${{ steps.triples.outputs.mcm_build_matrix }}
      docker_build_matrix: ${{ steps.triples.outputs.docker_build_matrix }}
      docker_test_matrix: ${{ steps.triples.outputs.docker_test_matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: bootstrap the matrix
        id: triples
        run: |
          echo "mcm_build_matrix=$(jq -c . triples.json)" >> $GITHUB_OUTPUT
          echo "docker_build_matrix=$(jq -c '{arch_type: [.arch_type[]]}' triples.json)" >> $GITHUB_OUTPUT
          echo "docker_test_matrix=$(jq -c '{build_host: [.build_host[]], arch_type: [.arch_type[]]}' triples.json)" >> $GITHUB_OUTPUT

  ci-mcm-build:
    if: >
      always() && !failure() && !cancelled() &&
      needs.skip_duplicate_job.outputs.should_skip != 'true'
      && ( needs.ci-check-new-releases.outputs.build_new_release == 'true' ||
      needs.scheduled_defaults.outputs.docker_only != 'true' && needs.scheduled_defaults.outputs.toolchains_only != 'false' )
    needs: [skip_duplicate_job, scheduled_defaults, bootstrap-matrix]
    concurrency:
      group: ci-mcm-build
      cancel-in-progress: true
    permissions:
      id-token: write
      contents: read
      attestations: write
    uses: ./.github/workflows/ci-mcm-build.yml
    with:
      mcm_build_matrix: ${{ needs.bootstrap-matrix.outputs.mcm_build_matrix }}

  ci-mcm-release:
    if: >
      always() && !failure() && !cancelled() &&
      needs.skip_duplicate_job.outputs.should_skip != 'true'
      && ( needs.ci-check-new-releases.outputs.build_new_release == 'true'
      || needs.scheduled_defaults.outputs.docker_only != 'true' && needs.scheduled_defaults.outputs.toolchains_only != 'false' )
    needs: [skip_duplicate_job, scheduled_defaults, ci-mcm-build]
    concurrency:
      group: ci-mcm-release
      cancel-in-progress: true
    permissions:
      contents: write
    uses: ./.github/workflows/ci-mcm-release.yml

  ci-docker-build:
    if: >
      always() && !failure() && !cancelled() &&
      needs.skip_duplicate_job.outputs.should_skip != 'true'
      && ( needs.ci-check-new-releases.outputs.build_new_release == 'true'
      || needs.scheduled_defaults.outputs.docker_only != 'false' && needs.scheduled_defaults.outputs.toolchains_only != 'true' )
    needs:
      [skip_duplicate_job, scheduled_defaults, bootstrap-matrix, ci-mcm-release]
    concurrency:
      group: ci-docker-build
      cancel-in-progress: true
    permissions:
      contents: read
      id-token: write
      packages: write
      attestations: write
    uses: ./.github/workflows/ci-docker-build.yml
    with:
      docker_build_matrix: ${{ needs.bootstrap-matrix.outputs.docker_build_matrix }}

  ci-docker-test:
    if: >
      always() && !failure() && !cancelled() &&
      needs.skip_duplicate_job.outputs.should_skip != 'true'
      && ( needs.ci-check-new-releases.outputs.build_new_release == 'true'
      || needs.scheduled_defaults.outputs.docker_only != 'false' && needs.scheduled_defaults.outputs.toolchains_only != 'true' )
    needs:
      [
        skip_duplicate_job,
        scheduled_defaults,
        bootstrap-matrix,
        ci-docker-build,
      ]
    concurrency:
      group: ci-docker-test
      cancel-in-progress: true
    permissions:
      contents: read
    uses: ./.github/workflows/ci-docker-test.yml
    with:
      docker_test_matrix: ${{ needs.bootstrap-matrix.outputs.docker_test_matrix }}

  ci-auto-rerun-failed-jobs:
    if: failure() && (needs.scheduled_defaults.outputs.skip_rerun || 'false') == 'false'
    needs:
      [
        skip_duplicate_job,
        scheduled_defaults,
        bootstrap-matrix,
        ci-mcm-build,
        ci-mcm-release,
        ci-docker-build,
        ci-docker-test,
      ]
    concurrency:
      group: ci-auto-rerun-failed-jobs
      cancel-in-progress: true
    permissions:
      actions: write
    runs-on: ubuntu-24.04-arm
    env:
      GH_TOKEN: "${{ secrets.AUTO_RERUN || github.token }}"
      github_repo: "" # To use ci-auto-rerun-failed-jobs.yml hosted in a remote repository else default to the current repository. Requires PAT token AUTO_RERUN
      retries: ${{ needs.scheduled_defaults.outputs.retries || '3' }}
      distinct_id: ${{ github.event.inputs.distinct_id }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: ci-auto-rerun-failed-jobs via ${{ env.github_repo || github.repository }}
        run: >
          gh workflow run ci-auto-rerun-failed-jobs-action.yml
          --repo "${github_repo:-$GITHUB_REPOSITORY}"
          -f github_repo=${GITHUB_REPOSITORY}
          -f run_id=${GITHUB_RUN_ID}
          -f attempts=${GITHUB_RUN_ATTEMPT}
          -f retries=${retries}
          -f distinct_id=${distinct_id}
